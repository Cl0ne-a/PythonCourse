from pip._vendor.pyparsing import empty

dict = {"id":3, "box":14, "pet":"dog", "city":"Ottawa"}
# Завдання: Перевірити наявність слова в словнику
val = "3"
print("Перевірити наявність слова в словнику")
print(val in dict)

# Завдання: Знайти максимальне значення в словнику
print("Знайти максимальне значення в словнику")
print(dict.get(max(dict.keys())))

# Завдання: Об'єднати значення словника в один рядок
# Опис: Напишіть програму, яка приймає словник (dictionary) з рядковими значеннями і об'єднує їх у один рядок без використання розгалужень або циклів.
# Приклад вхідних даних: {"name": "John", "age": "25", "city": "New York"}
# Приклад вихідних даних: "John 25 New York"
dict2 = {"name": "John", "age": "25", "city":"New York"}
val = " ".join(dict2.values())
print(val)


# Завдання 1: Додавання елементу до словника
# Опис: Напишіть програму, яка приймає словник (dictionary) і додає новий елемент до нього. Новий елемент складається з ключа (key) і значення (value). Використайте цю програму, щоб додати новий елемент до словника.
dict2["country"] = "United States"
a = dict2["country"]

# Завдання 2: Видалення елементу зі словника
# Опис: Напишіть програму, яка приймає словник (dictionary) і видаляє елемент за певним ключем (key). Використайте цю програму, щоб видалити елемент зі словника.
print(dict2.pop("country"))
print(dict2)

# Завдання 3: Підрахувати кількість елементів у словнику
# Опис: Напишіть програму, яка приймає словник (dictionary) і підраховує кількість елементів у ньому. Використайте цю програму, щоб вивести кількість елементів у словнику.
c = dict2.keys()
print(len(list(c)))

# Завдання 4: Отримати список ключів словника
# Опис: Напишіть програму, яка приймає словник (dictionary) і повертає список всіх ключів (keys) цього словника. Використайте цю програму, щоб отримати список ключів зі словника.
print(list(dict2.keys()))

# Завдання 5: Отримати список значень словника
# Опис: Напишіть програму, яка приймає словник (dictionary) і повертає список всіх значень (values) цього словника. Використайте цю програму, щоб отримати список значень зі словника.
print(list(dict2.values()))

# Завдання 6: Об'єднати два словники
# Опис: Напишіть програму, яка приймає два словники (dictionary1 і dictionary2) і об'єднує їх в один словник. Використайте цю програму, щоб об'єднати два словники.
# dict.update(dict2)
print(dict)
print(dict2)
# Завдання 7: Перевірити спільні ключі в двох словниках
# Опис: Напишіть програму, яка приймає два словники (dictionary1 і dictionary2) і перевіряє, чи містять вони спільні ключі. Використайте цю програму, щоб перевірити наявність спільних ключів в двох словниках.
first_dict_keys = list(dict.keys())

for key in first_dict_keys:
    if key in dict2.keys():
        print(key)

# Завдання 8: Отримати словник зі спільними ключами та значеннями
# Опис: Напишіть програму, яка приймає два словники (dictionary1 і dictionary2) і повертає новий словник, що містить тільки спільні ключі та відповідні їм значення. Використайте цю програму, щоб отримати новий словник зі спільними ключами та значеннями.
# first_dict_keys = list(dict.keys())
# dict3 = {}
# for key in first_dict_keys:
#     if key in dict2.keys():
#         dict3[key] = dict2[key]
#
# print(dict3)

# Завдання 9: Видалити спільні елементи зі словника
# Опис: Напишіть програму, яка приймає два словники (dictionary1 і dictionary2) і видаляє спільні елементи (ключі та значення) з першого словника. Використайте цю програму, щоб видалити спільні елементи зі словника.
first_dict_keys = list(dict.keys())

for key in first_dict_keys:
    if key in dict2.keys():
        dict.pop(key)

print(dict)

# Завдання 10: Отримати найменший ключ в словнику
# Опис: Напишіть програму, яка приймає словник (dictionary) і повертає найменший ключ (key) в цьому словнику. Використайте цю програму, щоб отримати найменший ключ зі словника.
dict4 = {"w": 1, "ya": 2, "cool": 3, "dog": 4}
print(min(list(dict4.keys())))

# Завдання 11: Отримати найбільший ключ в словнику
# Опис: Напишіть програму, яка приймає словник (dictionary) і повертає найбільший ключ (key) в цьому словнику. Використайте цю програму, щоб отримати найбільший ключ зі словника.
print(max(list(dict4.keys())))

# Завдання 12: Перевірити наявність певного значення у словнику
# Опис: Напишіть програму, яка приймає словник (dictionary) і перевіряє, чи міститься певне значення (value) у цьому словнику. Використайте цю програму, щоб перевірити наявність певного значення у словнику.
val = "ya"
print(val in dict4)

# Завдання 13: Видалити елемент за певним значенням зі словника
# Опис: Напишіть програму, яка приймає словник (dictionary) і видаляє перший елемент, що має певне значення (value). Використайте цю програму, щоб видалити елемент зі словника за певним значенням.
dict5 = {"w": 1, "ya": 2, "cool": 3, "dog": 4}
dict_keys = dict5.keys()
dict_values = dict5.values()
val = 2

key = list(dict_keys)[list(dict_values).index(val)]
dict5.pop(key)

print(dict5)
# Завдання 14: Знайти суму значень в словнику
# Опис: Напишіть програму, яка приймає словник (dictionary) з числовими значеннями і обчислює суму всіх значень в цьому словнику. Використайте цю програму, щоб знайти суму значень в словнику.
numerical_dict = {"a": 1, "b": 2, "c": 3, "d": 4}
summed_values = sum(numerical_dict.values())
print(summed_values)

# Завдання 15: Перевірити, чи є словник пустим
# Опис: Напишіть програму, яка приймає словник (dictionary) і перевіряє, чи є він пустим (не містить жодного елемента). Використайте цю програму, щоб перевірити, чи є словник пустим.
empty_dict = {}
print(len(empty_dict) == 0)

# Завдання: Обчислити суму елементів кортежу
# Опис: Напишіть програму, яка приймає кортеж чисел і обчислює суму цих чисел. Для розв'язання цього завдання можна використати вбудовану функцію sum(), яка приймає ітерабельний об'єкт, такий як кортеж, як аргумент і повертає суму його елементів. Після обчислення суми вона виводить її на екран.
my_tuple = ( 10, 2, 3, 4)
print(sum(my_tuple))

# Завдання: Перевірити, чи є кортеж пустим
# Опис: Напишіть програму, яка перевіряє, чи є кортеж пустим. Для цього можна використати перевірку на булеве значення кортежу. Якщо кортеж має елементи, він вважається непорожнім і виводиться False. Якщо кортеж порожній, значення bool() перетворюється на True, і виводиться True на екран.
empty_tuple = ()
print(len(empty_tuple) == 0)

# Завдання: Знайти максимальне значення в кортежі
# Опис: Напишіть програму, яка знаходить максимальне значення в кортежі чисел. Для цього можна використати вбудовану функцію max(), яка приймає ітерабельний об'єкт, такий як кортеж, як аргумент і повертає його найбільший елемент. Після знаходження максимального значення воно виводиться на екран.
print(max(my_tuple))

www = {"a": 1, "b": 2, "c": 3}
rrr = {"f": {"a": 1, "b": 2}}

res = www | rrr
print(res)