# Завдання: Групування слів за першою літерою
# Дано список слів. Створіть словник, де ключами будуть перші літери слів, а значеннями - список слів, які починаються з цих літер.
words = ["apple", "apricot", "banana", "carrot", "cabbage"]
new_dict = {w[0]: [] for w in words}

{new_dict.get(w[0]).append(w) for w in {x[0]: [] for x in words}}

print(new_dict)
# 3. Завдання: Злиття двох списків з унікальними значеннями
# Дано два списки чисел. Створіть список, що містить усі унікальні значення з обох списків.
l1 = [0, 4, 2, 5, 7]
l2 = [1, 2, 5, 6]
merged_list = [l for l in l1 if l not in l2]
print(merged_list)

# 4. Завдання: Підрахунок частоти входження слів
# Дано список слів. Створіть словник, де ключами будуть слова, а значеннями - кількість їх входжень у початковий список.
words = ["apple", "banana", "carrot", "apple", "carrot", "carrot"]
words_dict = {w: words.count(w) for w in words}
print(words_dict)
# 5. Завдання: Генерація послідовності чисел
# Створіть список чисел від 1 до 20, пропустивши парні числа, за допомогою List Comprehension.
odd_list = [x for x in range(20) if x % 2 != 0]
print(odd_list)

# 6. Завдання: Пошук спільних слів у реченнях
# Дано два речення. Створіть список слів, які зустрічаються в обох реченнях.
line1 = "I go home"
line2 = "I go to school, and home!"
print([l for l in line1.split() if l in line2])

# 7. Завдання: Видалення найменших значень зі списку
# Дано список чисел. Створіть список, з якого видалено найменші значення, за допомогою List Comprehension.


# 8. Завдання: Генерація пар чисел зі списку
# Дано список чисел. Створіть список,
# який містить всі можливі пари чисел з початкового списку,
# де перше число менше другого.
num_list1 = [10, 2, 8, 56]
num_list1.sort()
print(num_list1)
num_list2 = [str(i) + str(k) for i in num_list1 for k in num_list1 if i < k]
print(num_list2)

# 9. Завдання: Фільтрація словника за значенням
# Дано словник з цінами товарів. Створіть словник, який містить лише ті товари, ціна на які перевищує середню ціну всіх товарів.

# 10. Завдання: Відфільтрувати дати за місяцем
# Дано список дат у форматі 'YYYY-MM-DD'. Створіть список дат, які належать до вказаного місяця.

# 11. Завдання: Генерація послідовності чисел з кроком
# Створіть список чисел від 1 до 50 з кроком 5, за допомогою List Comprehension.

# 12. Завдання: Групування чисел за дільником
# Дано список чисел. Створіть словник, де ключами будуть дільники, а значеннями - список чисел, які діляться на ці дільники.

# 13. Завдання: Підрахунок букв у рядку
# Дано рядок. Створіть словник, де ключами будуть букви, а значеннями - кількість їх входжень у рядок.

# 14. Завдання: Знаходження спільних чисел у двох множинах
# Дано дві множини чисел. Створіть множину, яка містить числа, які зустрічаються і в першій, і в другій множині.

# 15. Завдання: Створення множини з рядка зі словами
# Дано рядок зі словами, розділеними пробілами. Створіть множину, яка містить усі унікальні слова з цього рядка.
